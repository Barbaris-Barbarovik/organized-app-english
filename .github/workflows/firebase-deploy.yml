name: LMM-OA Deploy to Firebase

on:
  push:
    branches: [ main, beta, alpha ]
    
jobs:    
  build_and_deploy_alpha:
    name: Build and Deploy Alpha preview
    if: ${{ github.repository == 'sws2apps/lmm-oa-sws' && github.ref == 'refs/heads/alpha' }}
    environment:
      name: Development
      url: ${{ steps.firebase_deploy_alpha.outputs.url }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
      - name: Checkout for release preparation
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install package dependencies
        run: npm ci

      - name: Run Semantic Release to version and build App
        run: npx semantic-release
        env:
          REACT_APP_ENCRYPTION_KEY: ${{ secrets.REACT_APP_ENCRYPTION_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Check if new version has been generated
        id: check_build
        uses: andstor/file-existence-action@v1
        with:
          files: "build"
      
      - name: Deploy to LMM-OA to Alpha Prerelease
        if: ${{ steps.check_build.outputs.files_exists == 'true' }}
        id: firebase_deploy_alpha
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LMM_OA_SWS }}'
          channelId: alpha
          projectId: lmm-oa-sws

  build_and_deploy_beta:
    name: Build and Deploy Beta preview
    if: ${{ github.repository == 'sws2apps/lmm-oa-sws' && github.ref == 'refs/heads/beta' }}
    environment:
      name: Staging
      url: ${{ steps.firebase_deploy_beta.outputs.url }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
      - name: Checkout for release preparation
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install package dependencies
        run: npm ci

      - name: Run Semantic Release to version and build App
        run: npx semantic-release
        env:
          REACT_APP_ENCRYPTION_KEY: ${{ secrets.REACT_APP_ENCRYPTION_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Check if new version has been generated
        id: check_build
        uses: andstor/file-existence-action@v1
        with:
          files: "build"
      
      - name: Deploy to LMM-OA to Beta Prerelease
        if: ${{ steps.check_build.outputs.files_exists == 'true' }}
        id: firebase_deploy_beta
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LMM_OA_SWS }}'
          channelId: beta
          projectId: lmm-oa-sws

  build_and_deploy_prod:
    name: Build and Deploy to Production
    if: ${{ github.repository == 'sws2apps/lmm-oa-sws' && github.ref == 'refs/heads/main' }}
    environment:
      name: Production
      url: ${{ steps.firebase_deploy_prod.outputs.url }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
      - name: Checkout for release preparation
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install package dependencies
        run: npm ci

      - name: Run Semantic Release to version and build App
        run: npx semantic-release
        env:
          REACT_APP_ENCRYPTION_KEY: ${{ secrets.REACT_APP_ENCRYPTION_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Check if new version has been generated
        id: check_build
        uses: andstor/file-existence-action@v1
        with:
          files: "build"
      
      - name: Deploy to LMM-OA to Production
        if: ${{ steps.check_build.outputs.files_exists == 'true' }}
        id: firebase_deploy_prod
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LMM_OA_SWS }}'
          channelId: live
          projectId: lmm-oa-sws